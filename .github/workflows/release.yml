name: Release

on: [push]

concurrency:
  group: all-release
  cancel-in-progress: true

jobs:
  check-release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 22.x
        uses: actions/setup-node@v1
        with:
          node-version: 22.x

      # - name: Cache node modules
      #   uses: actions/cache@v4
      #   with:
      #     path: node_modules
      #     key: npm-deps-${{ hashFiles('package-lock.json') }}
      #     restore-keys: |
      #       npm-deps-${{ hashFiles('package-lock.json') }}

      # - name: Install Dependencies
      #   run: |
      #     npm ci

      # - name: Build
      #   run: |
      #     npm run build

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx auto shipit --dry-run > output.txt 2>&1

          # Print the raw output for inspection
          echo "Raw output:"
          cat output.txt

          # Print each line with line numbers and special characters visible
          echo "Output with special characters visible:"
          cat -A output.txt

      - name: Check for version bump
        id: check
        run: |
          # Run and save output
          npx auto shipit --dry-run > output.txt 2>&1

          echo "Debug - Output with hexdump:"
          cat output.txt | hexdump -C

          echo "Debug - Each line separately:"
          while IFS= read -r line; do
            echo "Line: '$line'"
          done < output.txt

          # Try grep with various patterns
          echo "Debug - Trying grep patterns:"
          echo "Pattern 1 (exact):"
          grep "Calculated version bump: none" output.txt || echo "No match"

          echo "Pattern 2 (case insensitive):"
          grep -i "calculated version bump: none" output.txt || echo "No match"

          echo "Pattern 3 (with surrounding context):"
          grep -A 1 -B 1 "none" output.txt || echo "No match"

          # Make the decision
          if grep -F "Calculated version bump: none" output.txt; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "No version bump needed"
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "Version bump needed"
          fi

  # release:
  #   runs-on: ubuntu-latest
  #   if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Prepare repository
  #       run: git fetch --unshallow --tags

  #     - name: Use Node.js 22.x
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 22.x

  #     - name: Cache node modules
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: npm-deps-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           npm-deps-${{ hashFiles('package-lock.json') }}

  #     - name: Install Dependencies
  #       run: |
  #         npm ci

  #     - name: Build
  #       run: |
  #         npm run build

  #     - name: Create Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: |
  #         npx auto shipit
