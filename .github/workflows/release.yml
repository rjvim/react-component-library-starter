name: Release

on: [push]

concurrency:
  group: all-release
  cancel-in-progress: true

jobs:
  check-release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 22.x
        uses: actions/setup-node@v1
        with:
          node-version: 22.x

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-deps-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: |
          npm ci

      - name: Build
        run: |
          npm run build

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx auto shipit --dry-run > output.txt 2>&1

          # Print the raw output for inspection
          echo "Raw output:"
          cat output.txt

          # Print each line with line numbers and special characters visible
          echo "Output with special characters visible:"
          cat -A output.txt

      - name: Check for version bump
        id: check
        run: |
          # Save output and grep with a pattern that matches anywhere in the line
          HAS_VERSION_BUMP=$(npx auto shipit --dry-run > output.txt 2>&1 && grep -c ".*version bump: none" output.txt || true)
          echo "Raw value: $HAS_VERSION_BUMP"
          if [ "$HAS_VERSION_BUMP" -eq "0" ]; then
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "Version bump needed"
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "No version bump needed"
          fi

  # release:
  #   runs-on: ubuntu-latest
  #   if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Prepare repository
  #       run: git fetch --unshallow --tags

  #     - name: Use Node.js 22.x
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 22.x

  #     - name: Cache node modules
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: npm-deps-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           npm-deps-${{ hashFiles('package-lock.json') }}

  #     - name: Install Dependencies
  #       run: |
  #         npm ci

  #     - name: Build
  #       run: |
  #         npm run build

  #     - name: Create Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: |
  #         npx auto shipit
